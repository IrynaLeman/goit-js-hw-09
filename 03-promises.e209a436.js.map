{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBAClCG,EAASJ,SAASC,cAAc,SAChCI,EAAWL,SAASC,cAAc,yBAkCxC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAS,C,SAAEP,E,MAAUC,GAAQ,GAE9BA,EAAM,G,CA1CbJ,EAAOY,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBAEFb,EAASc,UAAW,EAEpB,IAAIC,EAAaC,OAAOtB,EAAQuB,OAC5BC,EAAYF,OAAOnB,EAAOoB,OAC1BE,EAAcH,OAAOlB,EAASmB,OAC9BG,EAAaL,EAAaG,EAAYC,EAC1C,GAAIJ,GAAc,GAAKG,GAAa,GAAKC,GAAe,EAEtD,YADA3B,EAAA6B,OAAOC,QAAQ,OAIjB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAaI,GAAY,EAC1DtB,EAAcsB,EAAUR,GACrBS,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,KACjBX,EAAA6B,OAAOI,QAAQ,uBAAqBvB,QAAiBC,SAAYuB,OAElE,EAAOxB,WAAUC,WAChBX,EAAA6B,OAAMM,QAAC,sBAASzB,QAA8BC,SAGlDY,GAAcG,EAEhBnB,EAAO6B,QAmBMC,EAlBPT,EAmBNV,YAAW,KACTV,EAASc,UAAW,CAAK,GACxBe,GAHL,IAAeA,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst formEl = document.querySelector('.form');\nconst startBtn = document.querySelector('button[type=\"submit\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  \n  startBtn.disabled = true;\n\n  let delayValue = Number(delayEl.value);\n  let stepValue = Number(stepEl.value);\n  let amountValue = Number(amountEl.value);\n  let totalDelay = delayValue + stepValue * amountValue;\n  if (delayValue <= 0 || stepValue <= 0 || amountValue <= 0) {\n    Notify.warning('???');\n    return;\n  };\n  \n  for (let position = 1; position <= amountValue; position += 1) {\n    createPromise(position, delayValue)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    );\n    \n    delayValue += stepValue;\n  }\n  formEl.reset()\n  onOff(totalDelay);\n}\n// console.log(onFormSubmit());\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((Resolve, Rejected) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Resolve({ position, delay });\n      } else {\n        Rejected({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onOff(total) { \n  setTimeout(() => {\n    startBtn.disabled = false;\n  }, total);\n}\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$formEl","$47d4ff9957288465$var$startBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","Resolve","Rejected","setTimeout","addEventListener","e","preventDefault","disabled","delayValue","Number","value","stepValue","amountValue","totalDelay","Notify","warning","position1","then","success","catch","failure","reset","total"],"version":3,"file":"03-promises.e209a436.js.map"}